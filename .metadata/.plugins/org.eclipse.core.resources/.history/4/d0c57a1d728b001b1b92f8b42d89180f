package com.choonham;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map.Entry;

public class Solution {

	public Solution() {
		// TODO Auto-generated constructor stub
	}

	public int[] solution(String[] genres, int[] plays) {
		HashMap<String, GenresInfo> hm = new HashMap<>();
		for (int i = 0; i < genres.length; i++) {
			if(!hm.containsKey(genres[i])) {
				hm.put(genres[i], new GenresInfo(plays[i], new ArrayList<SongInfo>()));
				hm.get(genres[i]).SongInfoList.add(new SongInfo(plays[i], i));
			} else {
				 hm.get(genres[i]).setTotalPlays(hm.get(genres[i]).getTotalPlays() + plays[i]);
				 hm.get(genres[i]).SongInfoList.add(new SongInfo(plays[i], i));
			}
		}
		
		GenresInfo[] genresList = new GenresInfo[hm.size()];
		
		int i = 0;
		
		for(Entry<String, GenresInfo> e : hm.entrySet()) {
			genresList[i++] = e.getValue();
			Collections.sort(e.getValue().getSongInfoList());
		}
		
		Arrays.sort(genresList);
		
		ArrayList<Integer> resultList = new ArrayList<>();
		for(GenresInfo g : genresList) {
			ArrayList<SongInfo> songList = g.getSongInfoList();
			int each = songList.size();
			
			if(each == 1) {
				resultList.add(songList.get(0).getIds());
			}
			else {
				for(int j = 0; j < 2; j++) {
					resultList.add(songList.get(j).getIds());
				}
			}
		}	
		
		int resultSize = resultList.size();
		int[] answer = new int[resultSize];
		
		for (int j = 0; j < resultSize; j++) {
			answer[j] = resultList.get(j);
		}

		return answer;
	}

	class GenresInfo implements Comparable<GenresInfo> {
		private int totalPlays;
		private ArrayList<SongInfo> SongInfoList;
		
		public GenresInfo(int totalPlays, ArrayList<SongInfo> SongInfoList) {
			this.totalPlays = totalPlays;
			this.SongInfoList = SongInfoList;
		}

		public int getTotalPlays() {
			return totalPlays;
		}

		public void setTotalPlays(int totalPlays) {
			this.totalPlays = totalPlays;
		}

		public ArrayList<SongInfo> getSongInfoList() {
			return SongInfoList;
		}

		public void setSongInfoList(ArrayList<SongInfo> songInfoList) {
			SongInfoList = songInfoList;
		}

		@Override
		public int compareTo(GenresInfo o) {
			if (totalPlays > o.totalPlays)
				return -1;
			else if (totalPlays == o.totalPlays)
				return 0;
			return 1;
		}
	}

	class SongInfo implements Comparable<SongInfo>{
		private int plays;
		private int ids;
		@Override
		public int compareTo(SongInfo o) {
			if(plays > o.plays || (plays == o.plays) && (ids < o.ids)) return -1;
			else return 1;
		}
		public SongInfo(int plays, int ids) {
			this.plays = plays;
			this.ids = ids;
		}
		public int getPlays() {
			return plays;
		}

		public void setPlays(int plays) {
			this.plays = plays;
		}

		public int getIds() {
			return ids;
		}

		public void setIds(int ids) {
			this.ids = ids;
		}

	}
}
