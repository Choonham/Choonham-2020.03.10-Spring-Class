package board_prj;

import java.util.ArrayList;

public class MethodClass {
	DataClass dc = new DataClass();
	ArrayList<BoardClass> boardList = dc.boardList;

	public MethodClass() {
		dc = new DataClass();
	}

	public int searchWay(String way) {
		String[] searchArray = { "no", "title", "author", "hit" };
		for (int j = 0; j < searchArray.length; j++) {
			if (way.equals(searchArray[j])) {
				if (j == 0) {
						return 0;
				} else if (j == 1) {
						return 1;
				} else if (j == 2) {
						return 2;
				} else {
						return 3;
				}
			} else return 99;
		}
		return 0;
	}
	
	public ArrayList<BoardClass> search(int j, String inputString) {
		BoardClass bc = new BoardClass();
		ArrayList<BoardClass> outputList = new ArrayList<BoardClass>();
				if (j == 0) {
					outputList = searchByNo(Integer.parseInt(inputString));
				} else if (j == 1) {
					outputList = searchByTitle(inputString);
				} else if (j == 2) {
					outputList = searchByAuthor(inputString);
				} else {
					outputList = searchByHit(Integer.parseInt(inputString));
				}
		return outputList;
	}

	public ArrayList<BoardClass> searchByNo(int no) {
		BoardClass bc = new BoardClass();
		ArrayList<BoardClass> outputList = new ArrayList<BoardClass>();
		for (int i = 0; i < boardList.size(); i++) {
			if (boardList.get(i).no == no) {
				bc = new BoardClass(boardList.get(i).no, boardList.get(i).title, boardList.get(i).author,
						boardList.get(i).hit);
				outputList.add(bc);
			}
		}
		return outputList;
	}

	public ArrayList<BoardClass> searchByTitle(String title) {
		BoardClass bc = new BoardClass();
		ArrayList<BoardClass> outputList = new ArrayList<BoardClass>();
		for (int i = 0; i < boardList.size(); i++) {
			if (boardList.get(i).title.contains(title)) {
				bc = new BoardClass(boardList.get(i).no, boardList.get(i).title, boardList.get(i).author,
						boardList.get(i).hit);
				outputList.add(bc);
			}
		}
		return outputList;
	}

	public ArrayList<BoardClass> searchByAuthor(String author) {
		BoardClass bc = new BoardClass();
		ArrayList<BoardClass> outputList = new ArrayList<BoardClass>();
		for (int i = 0; i < boardList.size(); i++) {
			if (boardList.get(i).author.contains(author)) {
				bc = new BoardClass(boardList.get(i).no, boardList.get(i).title, boardList.get(i).author,
						boardList.get(i).hit);
				outputList.add(bc);
			}
		}
		return outputList;
	}

	public ArrayList<BoardClass> searchByHit(int hit) {
		BoardClass bc = new BoardClass();
		ArrayList<BoardClass> outputList = new ArrayList<BoardClass>();
		for (int i = 0; i < boardList.size(); i++) {
			if (boardList.get(i).hit == hit) {
				bc = new BoardClass(boardList.get(i).no, boardList.get(i).title, boardList.get(i).author,
						boardList.get(i).hit);
				outputList.add(bc);
			}
		}
		return outputList;
	}

}
